"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/auth/login/route";
exports.ids = ["app/auth/login/route"];
exports.modules = {

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fauth%2Flogin%2Froute&page=%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fauth%2Flogin%2Froute.ts&appDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fauth%2Flogin%2Froute&page=%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fauth%2Flogin%2Froute.ts&appDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _home_omid_code_encore_app_starter_frontend_app_auth_login_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/auth/login/route.ts */ \"(rsc)/./app/auth/login/route.ts\");\n\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n// @ts-expect-error - replaced by webpack/turbopack loader\n\nconst AppRouteRouteModule = next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule;\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/auth/login/route\",\n        pathname: \"/auth/login\",\n        filename: \"route\",\n        bundlePath: \"app/auth/login/route\"\n    },\n    resolvedPagePath: \"/home/omid/code/encore-app/starter/frontend/app/auth/login/route.ts\",\n    nextConfigOutput,\n    userland: _home_omid_code_encore_app_starter_frontend_app_auth_login_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/auth/login/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhdXRoJTJGbG9naW4lMkZyb3V0ZSZwYWdlPSUyRmF1dGglMkZsb2dpbiUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmF1dGglMkZsb2dpbiUyRnJvdXRlLnRzJmFwcERpcj0lMkZob21lJTJGb21pZCUyRmNvZGUlMkZlbmNvcmUtYXBwJTJGc3RhcnRlciUyRmZyb250ZW5kJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGb21pZCUyRmNvZGUlMkZlbmNvcmUtYXBwJTJGc3RhcnRlciUyRmZyb250ZW5kJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ2hEO0FBQzBGO0FBQzNCO0FBQy9EO0FBQ2dHO0FBQ2hHLDRCQUE0QixnSEFBMEI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvP2ZlNjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci9ub2RlLXBvbHlmaWxsLWhlYWRlcnNcIjtcbi8vIEB0cy1pZ25vcmUgdGhpcyBuZWVkIHRvIGJlIGltcG9ydGVkIGZyb20gbmV4dC9kaXN0IHRvIGJlIGV4dGVybmFsXG5pbXBvcnQgKiBhcyBtb2R1bGUgZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbi8vIEB0cy1leHBlY3QtZXJyb3IgLSByZXBsYWNlZCBieSB3ZWJwYWNrL3R1cmJvcGFjayBsb2FkZXJcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvaG9tZS9vbWlkL2NvZGUvZW5jb3JlLWFwcC9zdGFydGVyL2Zyb250ZW5kL2FwcC9hdXRoL2xvZ2luL3JvdXRlLnRzXCI7XG5jb25zdCBBcHBSb3V0ZVJvdXRlTW9kdWxlID0gbW9kdWxlLkFwcFJvdXRlUm91dGVNb2R1bGU7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2F1dGgvbG9naW4vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2F1dGgvbG9naW5cIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXV0aC9sb2dpbi9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9ob21lL29taWQvY29kZS9lbmNvcmUtYXBwL3N0YXJ0ZXIvZnJvbnRlbmQvYXBwL2F1dGgvbG9naW4vcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hdXRoL2xvZ2luL3JvdXRlXCI7XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fauth%2Flogin%2Froute&page=%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fauth%2Flogin%2Froute.ts&appDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/auth/login/route.ts":
/*!*********************************!*\
  !*** ./app/auth/login/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app_lib_getRequestClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/lib/getRequestClient */ \"(rsc)/./app/lib/getRequestClient.ts\");\n\n\nasync function GET(req) {\n    let response;\n    try {\n        const client = (0,_app_lib_getRequestClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        response = await client.auth.Login();\n        (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)().set(\"state\", response.state);\n    } catch (error) {\n        console.error(error);\n        return Response.redirect(\"http://localhost:3000/error\");\n    }\n    console.log(response?.auth_code_url);\n    return Response.redirect(new URL(response?.auth_code_url));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXV0aC9sb2dpbi9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFDO0FBQ3FCO0FBR25ELGVBQWVFLElBQUlDLEdBQVk7SUFDcEMsSUFBSUM7SUFDSixJQUFJO1FBQ0YsTUFBTUMsU0FBU0oscUVBQWdCQTtRQUMvQkcsV0FBVyxNQUFNQyxPQUFPQyxJQUFJLENBQUNDLEtBQUs7UUFDbENQLHFEQUFPQSxHQUFHUSxHQUFHLENBQUMsU0FBU0osU0FBU0ssS0FBSztJQUN2QyxFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDQTtRQUNkLE9BQU9FLFNBQVNDLFFBQVEsQ0FBQztJQUMzQjtJQUVBRixRQUFRRyxHQUFHLENBQUNWLFVBQVVXO0lBQ3RCLE9BQU9ILFNBQVNDLFFBQVEsQ0FBQyxJQUFJRyxJQUFJWixVQUFVVztBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vYXBwL2F1dGgvbG9naW4vcm91dGUudHM/OWY2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2Nvb2tpZXN9IGZyb20gXCJuZXh0L2hlYWRlcnNcIjtcbmltcG9ydCBnZXRSZXF1ZXN0Q2xpZW50IGZyb20gXCJAL2FwcC9saWIvZ2V0UmVxdWVzdENsaWVudFwiO1xuaW1wb3J0IHthdXRofSBmcm9tIFwiQC9hcHAvbGliL2NsaWVudFwiO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcTogUmVxdWVzdCkge1xuICBsZXQgcmVzcG9uc2U6IGF1dGguTG9naW5SZXNwb25zZVxuICB0cnkge1xuICAgIGNvbnN0IGNsaWVudCA9IGdldFJlcXVlc3RDbGllbnQoKTtcbiAgICByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5hdXRoLkxvZ2luKCk7XG4gICAgY29va2llcygpLnNldChcInN0YXRlXCIsIHJlc3BvbnNlLnN0YXRlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICByZXR1cm4gUmVzcG9uc2UucmVkaXJlY3QoXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvZXJyb3JcIik7XG4gIH1cblxuICBjb25zb2xlLmxvZyhyZXNwb25zZT8uYXV0aF9jb2RlX3VybClcbiAgcmV0dXJuIFJlc3BvbnNlLnJlZGlyZWN0KG5ldyBVUkwocmVzcG9uc2U/LmF1dGhfY29kZV91cmwpKTtcbn1cbiJdLCJuYW1lcyI6WyJjb29raWVzIiwiZ2V0UmVxdWVzdENsaWVudCIsIkdFVCIsInJlcSIsInJlc3BvbnNlIiwiY2xpZW50IiwiYXV0aCIsIkxvZ2luIiwic2V0Iiwic3RhdGUiLCJlcnJvciIsImNvbnNvbGUiLCJSZXNwb25zZSIsInJlZGlyZWN0IiwibG9nIiwiYXV0aF9jb2RlX3VybCIsIlVSTCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/auth/login/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/client.ts":
/*!***************************!*\
  !*** ./app/lib/client.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIError: () => (/* binding */ APIError),\n/* harmony export */   Environment: () => (/* binding */ Environment),\n/* harmony export */   ErrCode: () => (/* binding */ ErrCode),\n/* harmony export */   Local: () => (/* binding */ Local),\n/* harmony export */   PreviewEnv: () => (/* binding */ PreviewEnv),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   \"default\": () => (/* binding */ Client),\n/* harmony export */   isAPIError: () => (/* binding */ isAPIError),\n/* harmony export */   user: () => (/* binding */ user)\n/* harmony export */ });\n// Code generated by the Encore v1.27.6 client generator. DO NOT EDIT.\n// Disable eslint, jshint, and jslint for this file.\n/* eslint-disable */ /* jshint ignore:start */ /*jslint-disable*/ /**\n * BaseURL is the base URL for calling the Encore application's API.\n */ const Local = \"http://localhost:4000\";\n/**\n * Environment returns a BaseURL for calling the cloud environment with the given name.\n */ function Environment(name) {\n    return `https://${name}-starter-49p2.encr.app`;\n}\n/**\n * PreviewEnv returns a BaseURL for calling the preview environment with the given PR number.\n */ function PreviewEnv(pr) {\n    return Environment(`pr${pr}`);\n}\n/**\n * Client is an API client for the auth-1234 Encore application. \n */ class Client {\n    constructor(target = \"prod\", options){\n        // Convert the old constructor parameters to a BaseURL object and a ClientOptions object\n        if (!target.startsWith(\"http://\") && !target.startsWith(\"https://\")) {\n            target = Environment(target);\n        }\n        if (typeof options === \"string\") {\n            options = {\n                auth: options\n            };\n        }\n        const base = new BaseClient(target, options ?? {});\n        this.auth = new auth.ServiceClient(base);\n        this.user = new user.ServiceClient(base);\n    }\n}\nvar auth;\n(function(auth) {\n    class ServiceClient {\n        constructor(baseClient){\n            this.baseClient = baseClient;\n        }\n        async Callback(params) {\n            // Now make the actual call to the API\n            const resp = await this.baseClient.callAPI(\"POST\", `/auth/callback`, JSON.stringify(params));\n            return await resp.json();\n        }\n        async Login() {\n            // Now make the actual call to the API\n            const resp = await this.baseClient.callAPI(\"POST\", `/auth/login`);\n            return await resp.json();\n        }\n        async Logout() {\n            // Now make the actual call to the API\n            const resp = await this.baseClient.callAPI(\"GET\", `/auth/logout`);\n            return await resp.json();\n        }\n    }\n    auth.ServiceClient = ServiceClient;\n})(auth || (auth = {}));\nvar user;\n(function(user) {\n    class ServiceClient {\n        constructor(baseClient){\n            this.baseClient = baseClient;\n        }\n        async GetUser(id) {\n            // Now make the actual call to the API\n            const resp = await this.baseClient.callAPI(\"GET\", `/users/${encodeURIComponent(id)}`);\n            return await resp.json();\n        }\n        async ListUsers() {\n            // Now make the actual call to the API\n            const resp = await this.baseClient.callAPI(\"GET\", `/users`);\n            return await resp.json();\n        }\n    }\n    user.ServiceClient = ServiceClient;\n})(user || (user = {}));\nfunction encodeQuery(parts) {\n    const pairs = [];\n    for(const key in parts){\n        const val = Array.isArray(parts[key]) ? parts[key] : [\n            parts[key]\n        ];\n        for (const v of val){\n            pairs.push(`${key}=${encodeURIComponent(v)}`);\n        }\n    }\n    return pairs.join(\"&\");\n}\n// makeRecord takes a record and strips any undefined values from it,\n// and returns the same record with a narrower type.\n// @ts-ignore - TS ignore because makeRecord is not always used\nfunction makeRecord(record) {\n    for(const key in record){\n        if (record[key] === undefined) {\n            delete record[key];\n        }\n    }\n    return record;\n}\nconst boundFetch = fetch.bind(undefined);\nclass BaseClient {\n    constructor(baseURL, options){\n        this.baseURL = baseURL;\n        this.headers = {\n            \"Content-Type\": \"application/json\",\n            \"User-Agent\": \"starter-49p2-Generated-TS-Client (Encore/v1.27.6)\"\n        };\n        this.requestInit = options.requestInit ?? {};\n        // Setup what fetch function we'll be using in the base client\n        if (options.fetcher !== undefined) {\n            this.fetcher = options.fetcher;\n        } else {\n            this.fetcher = boundFetch;\n        }\n        // Setup an authentication data generator using the auth data token option\n        if (options.auth !== undefined) {\n            const auth = options.auth;\n            if (typeof auth === \"function\") {\n                this.authGenerator = auth;\n            } else {\n                this.authGenerator = ()=>auth;\n            }\n        }\n    }\n    // callAPI is used by each generated API method to actually make the request\n    async callAPI(method, path, body, params) {\n        let { query, headers, ...rest } = params ?? {};\n        const init = {\n            ...this.requestInit,\n            ...rest,\n            method,\n            body: body ?? null\n        };\n        // Merge our headers with any predefined headers\n        init.headers = {\n            ...this.headers,\n            ...init.headers,\n            ...headers\n        };\n        // If authorization data generator is present, call it and add the returned data to the request\n        let authData;\n        if (this.authGenerator) {\n            authData = this.authGenerator();\n        }\n        // If we now have authentication data, add it to the request\n        if (authData) {\n            init.headers[\"Authorization\"] = \"Bearer \" + authData;\n        }\n        // Make the actual request\n        const queryString = query ? \"?\" + encodeQuery(query) : \"\";\n        const response = await this.fetcher(this.baseURL + path + queryString, init);\n        // handle any error responses\n        if (!response.ok) {\n            // try and get the error message from the response body\n            let body = {\n                code: ErrCode.Unknown,\n                message: `request failed: status ${response.status}`\n            };\n            // if we can get the structured error we should, otherwise give a best effort\n            try {\n                const text = await response.text();\n                try {\n                    const jsonBody = JSON.parse(text);\n                    if (isAPIErrorResponse(jsonBody)) {\n                        body = jsonBody;\n                    } else {\n                        body.message += \": \" + JSON.stringify(jsonBody);\n                    }\n                } catch  {\n                    body.message += \": \" + text;\n                }\n            } catch (e) {\n                // otherwise we just append the text to the error message\n                body.message += \": \" + String(e);\n            }\n            throw new APIError(response.status, body);\n        }\n        return response;\n    }\n}\nfunction isAPIErrorResponse(err) {\n    return err !== undefined && err !== null && isErrCode(err.code) && typeof err.message === \"string\" && (err.details === undefined || err.details === null || typeof err.details === \"object\");\n}\nfunction isErrCode(code) {\n    return code !== undefined && Object.values(ErrCode).includes(code);\n}\n/**\n * APIError represents a structured error as returned from an Encore application.\n */ class APIError extends Error {\n    constructor(status, response){\n        // extending errors causes issues after you construct them, unless you apply the following fixes\n        super(response.message);\n        // set error name as constructor name, make it not enumerable to keep native Error behavior\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new.target#new.target_in_constructors\n        Object.defineProperty(this, \"name\", {\n            value: \"APIError\",\n            enumerable: false,\n            configurable: true\n        });\n        // fix the prototype chain\n        if (Object.setPrototypeOf == undefined) {\n            this.__proto__ = APIError.prototype;\n        } else {\n            Object.setPrototypeOf(this, APIError.prototype);\n        }\n        // capture a stack trace\n        if (Error.captureStackTrace !== undefined) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        this.status = status;\n        this.code = response.code;\n        this.details = response.details;\n    }\n}\n/**\n * Typeguard allowing use of an APIError's fields'\n */ function isAPIError(err) {\n    return err instanceof APIError;\n}\nvar ErrCode;\n(function(ErrCode) {\n    ErrCode[/**\n     * OK indicates the operation was successful.\n     */ \"OK\"] = \"ok\";\n    ErrCode[/**\n     * Canceled indicates the operation was canceled (typically by the caller).\n     *\n     * Encore will generate this error code when cancellation is requested.\n     */ \"Canceled\"] = \"canceled\";\n    ErrCode[/**\n     * Unknown error. An example of where this error may be returned is\n     * if a Status value received from another address space belongs to\n     * an error-space that is not known in this address space. Also\n     * errors raised by APIs that do not return enough error information\n     * may be converted to this error.\n     *\n     * Encore will generate this error code in the above two mentioned cases.\n     */ \"Unknown\"] = \"unknown\";\n    ErrCode[/**\n     * InvalidArgument indicates client specified an invalid argument.\n     * Note that this differs from FailedPrecondition. It indicates arguments\n     * that are problematic regardless of the state of the system\n     * (e.g., a malformed file name).\n     *\n     * This error code will not be generated by the gRPC framework.\n     */ \"InvalidArgument\"] = \"invalid_argument\";\n    ErrCode[/**\n     * DeadlineExceeded means operation expired before completion.\n     * For operations that change the state of the system, this error may be\n     * returned even if the operation has completed successfully. For\n     * example, a successful response from a server could have been delayed\n     * long enough for the deadline to expire.\n     *\n     * The gRPC framework will generate this error code when the deadline is\n     * exceeded.\n     */ \"DeadlineExceeded\"] = \"deadline_exceeded\";\n    ErrCode[/**\n     * NotFound means some requested entity (e.g., file or directory) was\n     * not found.\n     *\n     * This error code will not be generated by the gRPC framework.\n     */ \"NotFound\"] = \"not_found\";\n    ErrCode[/**\n     * AlreadyExists means an attempt to create an entity failed because one\n     * already exists.\n     *\n     * This error code will not be generated by the gRPC framework.\n     */ \"AlreadyExists\"] = \"already_exists\";\n    ErrCode[/**\n     * PermissionDenied indicates the caller does not have permission to\n     * execute the specified operation. It must not be used for rejections\n     * caused by exhausting some resource (use ResourceExhausted\n     * instead for those errors). It must not be\n     * used if the caller cannot be identified (use Unauthenticated\n     * instead for those errors).\n     *\n     * This error code will not be generated by the gRPC core framework,\n     * but expect authentication middleware to use it.\n     */ \"PermissionDenied\"] = \"permission_denied\";\n    ErrCode[/**\n     * ResourceExhausted indicates some resource has been exhausted, perhaps\n     * a per-user quota, or perhaps the entire file system is out of space.\n     *\n     * This error code will be generated by the gRPC framework in\n     * out-of-memory and server overload situations, or when a message is\n     * larger than the configured maximum size.\n     */ \"ResourceExhausted\"] = \"resource_exhausted\";\n    ErrCode[/**\n     * FailedPrecondition indicates operation was rejected because the\n     * system is not in a state required for the operation's execution.\n     * For example, directory to be deleted may be non-empty, an rmdir\n     * operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FailedPrecondition, Aborted, and Unavailable:\n     *  (a) Use Unavailable if the client can retry just the failing call.\n     *  (b) Use Aborted if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FailedPrecondition if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FailedPrecondition\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FailedPrecondition if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     *\n     * This error code will not be generated by the gRPC framework.\n     */ \"FailedPrecondition\"] = \"failed_precondition\";\n    ErrCode[/**\n     * Aborted indicates the operation was aborted, typically due to a\n     * concurrency issue like sequencer check failures, transaction aborts,\n     * etc.\n     *\n     * See litmus test above for deciding between FailedPrecondition,\n     * Aborted, and Unavailable.\n     */ \"Aborted\"] = \"aborted\";\n    ErrCode[/**\n     * OutOfRange means operation was attempted past the valid range.\n     * E.g., seeking or reading past end of file.\n     *\n     * Unlike InvalidArgument, this error indicates a problem that may\n     * be fixed if the system state changes. For example, a 32-bit file\n     * system will generate InvalidArgument if asked to read at an\n     * offset that is not in the range [0,2^32-1], but it will generate\n     * OutOfRange if asked to read from an offset past the current\n     * file size.\n     *\n     * There is a fair bit of overlap between FailedPrecondition and\n     * OutOfRange. We recommend using OutOfRange (the more specific\n     * error) when it applies so that callers who are iterating through\n     * a space can easily look for an OutOfRange error to detect when\n     * they are done.\n     *\n     * This error code will not be generated by the gRPC framework.\n     */ \"OutOfRange\"] = \"out_of_range\";\n    ErrCode[/**\n     * Unimplemented indicates operation is not implemented or not\n     * supported/enabled in this service.\n     *\n     * This error code will be generated by the gRPC framework. Most\n     * commonly, you will see this error code when a method implementation\n     * is missing on the server. It can also be generated for unknown\n     * compression algorithms or a disagreement as to whether an RPC should\n     * be streaming.\n     */ \"Unimplemented\"] = \"unimplemented\";\n    ErrCode[/**\n     * Internal errors. Means some invariants expected by underlying\n     * system has been broken. If you see one of these errors,\n     * something is very broken.\n     *\n     * This error code will be generated by the gRPC framework in several\n     * internal error conditions.\n     */ \"Internal\"] = \"internal\";\n    ErrCode[/**\n     * Unavailable indicates the service is currently unavailable.\n     * This is a most likely a transient condition and may be corrected\n     * by retrying with a backoff. Note that it is not always safe to retry\n     * non-idempotent operations.\n     *\n     * See litmus test above for deciding between FailedPrecondition,\n     * Aborted, and Unavailable.\n     *\n     * This error code will be generated by the gRPC framework during\n     * abrupt shutdown of a server process or network connection.\n     */ \"Unavailable\"] = \"unavailable\";\n    ErrCode[/**\n     * DataLoss indicates unrecoverable data loss or corruption.\n     *\n     * This error code will not be generated by the gRPC framework.\n     */ \"DataLoss\"] = \"data_loss\";\n    ErrCode[/**\n     * Unauthenticated indicates the request does not have valid\n     * authentication credentials for the operation.\n     *\n     * The gRPC framework will generate this error code when the\n     * authentication metadata is invalid or a Credentials callback fails,\n     * but also expect authentication middleware to generate it.\n     */ \"Unauthenticated\"] = \"unauthenticated\";\n})(ErrCode || (ErrCode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/client.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/getRequestClient.ts":
/*!*************************************!*\
  !*** ./app/lib/getRequestClient.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/headers.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app_lib_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/lib/client */ \"(rsc)/./app/lib/client.ts\");\n\n\n/**\n * Returns the Encore request client for either the local or staging environment.\n * If we are running the frontend locally (development) we assume that our Encore backend is also running locally\n * and make requests to that, otherwise we use the staging client.\n */ const getRequestClient = ()=>{\n    const token = (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)().get(\"auth-token\")?.value;\n    const env =  true ? \"http://127.0.0.1:4000\" : 0;\n    return new _app_lib_client__WEBPACK_IMPORTED_MODULE_1__[\"default\"](env, {\n        auth: token\n    });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getRequestClient);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGliL2dldFJlcXVlc3RDbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1QztBQUNnQjtBQUV2RDs7OztDQUlDLEdBQ0QsTUFBTUcsbUJBQW1CO0lBQ3ZCLE1BQU1DLFFBQVFKLHFEQUFPQSxHQUFHSyxHQUFHLENBQUMsZUFBZUM7SUFDM0MsTUFBTUMsTUFDSkMsS0FBc0MsR0FDbEMsMEJBQ0FOLENBQXNCO0lBRTVCLE9BQU8sSUFBSUQsdURBQU1BLENBQUNNLEtBQUs7UUFDckJFLE1BQU1MO0lBQ1I7QUFDRjtBQUVBLGlFQUFlRCxnQkFBZ0JBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL2FwcC9saWIvZ2V0UmVxdWVzdENsaWVudC50cz8yNDViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvb2tpZXMgfSBmcm9tIFwibmV4dC9oZWFkZXJzXCI7XG5pbXBvcnQgQ2xpZW50LCB7IEVudmlyb25tZW50IH0gZnJvbSBcIkAvYXBwL2xpYi9jbGllbnRcIjtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBFbmNvcmUgcmVxdWVzdCBjbGllbnQgZm9yIGVpdGhlciB0aGUgbG9jYWwgb3Igc3RhZ2luZyBlbnZpcm9ubWVudC5cbiAqIElmIHdlIGFyZSBydW5uaW5nIHRoZSBmcm9udGVuZCBsb2NhbGx5IChkZXZlbG9wbWVudCkgd2UgYXNzdW1lIHRoYXQgb3VyIEVuY29yZSBiYWNrZW5kIGlzIGFsc28gcnVubmluZyBsb2NhbGx5XG4gKiBhbmQgbWFrZSByZXF1ZXN0cyB0byB0aGF0LCBvdGhlcndpc2Ugd2UgdXNlIHRoZSBzdGFnaW5nIGNsaWVudC5cbiAqL1xuY29uc3QgZ2V0UmVxdWVzdENsaWVudCA9ICgpID0+IHtcbiAgY29uc3QgdG9rZW4gPSBjb29raWVzKCkuZ2V0KFwiYXV0aC10b2tlblwiKT8udmFsdWU7XG4gIGNvbnN0IGVudiA9XG4gICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIlxuICAgICAgPyBcImh0dHA6Ly8xMjcuMC4wLjE6NDAwMFwiXG4gICAgICA6IEVudmlyb25tZW50KFwic3RhZ2luZ1wiKTtcblxuICByZXR1cm4gbmV3IENsaWVudChlbnYsIHtcbiAgICBhdXRoOiB0b2tlbixcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnZXRSZXF1ZXN0Q2xpZW50O1xuIl0sIm5hbWVzIjpbImNvb2tpZXMiLCJDbGllbnQiLCJFbnZpcm9ubWVudCIsImdldFJlcXVlc3RDbGllbnQiLCJ0b2tlbiIsImdldCIsInZhbHVlIiwiZW52IiwicHJvY2VzcyIsImF1dGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/getRequestClient.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fauth%2Flogin%2Froute&page=%2Fauth%2Flogin%2Froute&appPaths=&pagePath=private-next-app-dir%2Fauth%2Flogin%2Froute.ts&appDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fomid%2Fcode%2Fencore-app%2Fstarter%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();